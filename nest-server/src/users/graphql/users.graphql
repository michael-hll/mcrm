input UpdateRole {
  code: String!
  operation: String!
}

type Role {
  code: String!
}

"""
/** This is for testing purpose *
 * For the Auth and role modules, we still use the RESTful api in the future 
 * Since I don't want to drop the exiting codes
 * Later for other business module like orders, contacts we will use
 * Graphql in a real word */

User model
"""
type User {
  id: ID!
  username: String
  email: String
  firstname: String
  lastname: String
  cellphone: String
  phone: String
  country: String
  city: String
  address1: String
  address2: String
  zipcode: String
  active: Boolean
  roles: [Role!]
}

input UpdateUserInput {
  username: String
  email: String
  firstname: String
  lastname: String
  cellphone: String
  phone: String
  country: String
  city: String
  address1: String
  address2: String
  zipcode: String
  active: Boolean
  roles: [UpdateRole!]
}

type Query {
  users: [User!]!
  user(id: ID!): User!
}

type Mutation {
  updateUser(id: ID!, updateUserInput: UpdateUserInput!): User!
}


